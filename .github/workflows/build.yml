name: Build Executable

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Name of the build"
        required: true
      version:
        description: "Version of the build"
        required: true
      commit:
        description: "Commit SHA to build"
        required: true
      branch:
        description: "Branch to checkout"
        required: true
      endpoint:
        description: "Backend endpoint URL for uploading artifacts"
        required: true
      dispatchID:
        description: "Dispatch ID"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable

      - name: Decode SSH Key
        run: |
          echo "${{ secrets.GIT_SSH_KEY }}" > ssh_key
          chmod 600 ssh_key

      - name: Setup custom SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host gitlab.com-codewave" >> ~/.ssh/config
          echo "    HostName gitlab.com" >> ~/.ssh/config
          echo "    User git" >> ~/.ssh/config
          echo "    IdentityFile $(pwd)/ssh_key" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config
          ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/config
          chmod 600 $(pwd)/ssh_key

      - name: Setup SSH for GitLab Access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GIT_SSH_KEY }}

      - name: Install dependenciesc
        run: dart pub get

      - name: Compile to executable
        run: dart compile exe bin/${{ github.event.inputs.name }}.dart -o bin/${{ github.event.inputs.name }}_${{ github.event.inputs.version }}_${{ runner.os }}_executable

      - name: Upload Artifacts to Backend
        run: |
          curl -X POST -F "artifact=@bin/${{ github.event.inputs.name }}_${{ github.event.inputs.version }}_${{ runner.os }}_executable"  -F "dispatch_id=${{ github.event.inputs.dispatchID }}" -F "operating_system=${{ runner.os }}" ${{ github.event.inputs.endpoint }}

      - name: Cleanup Artifacts
        if: always()
        run: rm -f bin/${{ github.event.inputs.name }}_${{ github.event.inputs.version }}_${{ runner.os }}_executable
